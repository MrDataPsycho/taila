services:
  backend:
    build:
      context: .
      dockerfile: Dockerfile.backend
    container_name: rag-backend
    ports:
      - "8000:8000"
    extra_hosts:
      - "host.docker.internal:172.17.0.1"
    environment:
      # - OLLAMA_BASE_URL=http://172.17.0.1:11434
      - RUNTIME_ENV=local
      - HOST_SYSTEM=container
    # volumes:
    #   - ./vectordb:/app/vectordb
    networks:
      - rag-net

  frontend:
    build:
      context: .
      dockerfile: Dockerfile.frontend
    container_name: rag-frontend
    ports:
      - "8501:8501"
    depends_on:
      - backend
    environment:
      - BACKEND_URL=http://backend:8000
    networks:
      - rag-net

  postgres:
    image: postgres:15
    container_name: rag-postgres
    restart: always
    environment:
      - POSTGRES_DB=procureme
      - POSTGRES_USER=procureme
      - POSTGRES_PASSWORD=procureme
    ports:
      - "5432:5432"
    volumes:
      - postgres_data:/var/lib/postgresql/data
    networks:
      - rag-net

  # qdrant:
  #   image: qdrant/qdrant
  #   container_name: rag-qdrant
  #   restart: unless-stopped
  #   ports:
  #     - "6333:6333"  # REST API
  #     - "6334:6334"  # gRPC API
  #   networks:
  #     - rag-net

  # dynamodb:
  #   image: amazon/dynamodb-local:latest
  #   container_name: rag-dynamodb
  #   command: "-jar DynamoDBLocal.jar -sharedDb -dbPath /home/dynamodblocal/data"
  #   ports:
  #     - "8001:8000"
  #   volumes:
  #     - dynamodb_data:/home/dynamodblocal/data
  #   networks:
  #     - rag-net

networks:
  rag-net:
    driver: bridge

volumes:
  postgres_data:
  # dynamodb_data:
